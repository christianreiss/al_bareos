#! /bin/bash
#
# This file is managed by
#  ____  _   _ ____  ____  _____ _____
# |  _ \| | | |  _ \|  _ \| ____|_   _|
# | |_) | | | | |_) | |_) |  _|   | |
# |  __/| |_| |  __/|  __/| |___  | |
# |_|    \___/|_|   |_|   |_____| |_|
#
#      All changes will be overwritten
#       Nagios Notification Serverside

# Dumb Terminal Fix
TERM=dumb
export TERM

# Hostname (HN) is being sent as argument from  bareos. So We set $1 to HN.
HN="`echo $1 | awk -F\"-fd\" ' { print $1 } '`"

# The Error code is the second argument.
EXIT="$2"

# JobID
JOBID="$3"

# TimeStamp Logfile
TS="/tmp/${HN}"

# Monitoring Server to send results to
MONITORING_SERVER="<%= scope.lookupvar('::al_bareos::server::monitoring_server')%>"
NRPE_CONFIG="<%= scope.lookupvar('::al_bareos::server::send_nsca_config')%>"


#
# Start of Job, set Timestamp only.
#
if [ "$2" == "START" ] ; then
    echo "`date +%s`" > ${TS}
    exit 0
fi


#
# Calculate the Backup Duration.
#
if [ -e "${TS}" ] ; then
    NOW="`date +%s`"
    THEN="`cat ${TS}`"
    let "PASSED = ($NOW-$THEN)/60"
else
    PASSED="unknown"
fi


#
# "Help"
#
if [ "$1" == "--help" ] ; then
    echo "       [fqdn] unstick - unsticks nagios alert."
    echo "       --help         - shows this help."
    exit 0
fi


#
# Clear Monitoring
#
if [ "$2" == "unstick" ] ; then
    /bin/echo "${HN};bareos: backup;0;Manually cleared @ `date +%H:%M:%S`" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
    /bin/echo "${HN};bareos: full backup;0;Manually cleared @ `date +%H:%M:%S`" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
    exit 0
fi


#
# Last Full Backup Check
#
LastFull="$(/usr/bin/php /etc/bareos/bin/getLastFull.php ${HN})"
if [ "${LastFull}" == "OK" ] ; then
        /bin/echo "${HN};bareos: full backup;0;full backup OK." | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
else
        /bin/echo "${HN};bareos: full backup;2;No full backup within 30 days found!" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
fi


#
# Send the result of the current run to the monitoring server.
#
if [ "${EXIT}" == "OK" ] ; then
    # OK exit: Send just that.
    if [ "${PASSED}" -le 60 ]; then
        # Backup took less than 60 Minutes. Good.
        /bin/echo "${HN};bareos: backup;0;Backup completed in ${PASSED} Minutes. :) (`date +%H:%M:%S`)" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
    else
        # Backup took more than 360 Minutes. Bad.
        /bin/echo "${HN};bareos: backup;0;Backup completed, but in ${PASSED} Minutes :/ (`date +%H:%M:%S`)" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
    fi
else
    # Everything else: PANIC!
    /bin/echo "${HN};bareos: backup;2;Backup failed after ${PASSED} Minutes at `date +%H:%M:%S` with ${EXIT}! :(" | /usr/sbin/send_nsca -H ${MONITORING_SERVER} -c ${NRPE_CONFIG} -d ';' >/dev/null
fi


#
# Remove the TimeStamp.
#
test -e ${TS} && rm ${TS}
